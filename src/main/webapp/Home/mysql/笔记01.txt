索引是什么？
	是为了加速对表中的数据行检索的而创建的一种数据结构
为什么要用索引？
	1 索引能几大的减少存储引擎需要扫描的数据量 例如 select * 使用不了符合索引 覆盖所以
	2 索引可以把随机io变成顺序io
	3 索引可以帮助我们在进行分组和排序等操作的时候，避免使用临时表（后续需要整理）
索引类型有哪些？
	1 二叉查找树  规则：左小右大
	2 平衡二叉树	规则：瘦高树 高度决定io的次数  没有很好的利用io交换特性
		没有很好的利用磁盘预读能力 mysq一页数据为16KB
	3 b tree树
		规则：索引个数=路数-1 大部分关系型数据库索引 都是b树或者是b树的变种
			每一词数据位置的变动都会对树进行大范围移动
		好处：很好的利用了磁盘io以及预读能力
	4 b+tree树
		规则：矮胖树 ，查询增加稳定。数据只会存在底层的叶子节点中

mysql索引类型？
normal：表示普通索引
unique：表示唯一的，不允许重复的索引，如果该字段信息保证不会重复例如身份证号用作索引时，可设置		为unique
full textl: 表示 全文搜索的索引。 FULLTEXT 用于搜索很长一篇文章的时候，效果最好。用在比较短的	文本，如果就一两行字的，普通的 INDEX 也可以。


索引文件：
myisam：
myi 存储索引文件
myd 存储数据文件
frm 表定义文件

innodb：
ibd 存储索引,数据文件
frm 表定义文件
以主键为索引的聚集索引 如果没有主键，也会内部默认生成一个6BYTE的列作为索引，
并且该列的值会随着数据的增加而自增
innodb 就是以聚集索引来组织数据的 底层的叶子节点来存储所有的数据，并且还是有序的。

如果别的字段建了索引  那么就叫辅助索引
辅助索引叶子节点存储的是主键索引。
好处是 数据位置变更，只需要维护主键索引底层节点位置就好
而myisam就不一样  除主键所以之外的索引 存储的还是数据位置

myisam与innodb不同
数据存储方式  innodb数据查询效率更加稳定


单条主键索引就是特殊的联合索引
联合索引选择原则：
1 最左匹配原则
2 列的离散性
3 宽度小的列优先


覆盖索引：
如果查询列可通过索引节点中的关键字直接返回，则该索引称之为 覆盖索引
这个也就是为什么有些公司 不允许适用select * from
select id  from  id的索引 也叫覆盖索引！
覆盖索引不用扫描到叶子节点 直接在节点中扫到就可以直接返回数据！

顺序io 随机io？



总结：
什么是索引 索引的存储文件  索引的类型  索引btree是怎样快速检索数据的
主键索引  联合索引  覆盖索引
最左匹配原则  列的离散性 宽度小的列优先





