<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans

	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!--<typeHandlers>
		<typeHandler handler="com.wt.overflow.interceptor.WtStringTypeHandler"
					 javaType="java.lang.String" jdbcType="VARCHAR"/>
	</typeHandlers>-->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
	</bean>


	<bean id="bmsSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>helperDialect=mysql</value>
					</property>
				</bean>
			</array>
		</property>

	</bean>

	<bean id="bmsTk" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wt.overflow.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper
			</value>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		<!--自定义typeHandlers  可对调用后端逻辑的请求参数进行预处理-->
		<property name="typeHandlers" ref="typeHandlers">
		</property>
	</bean>

	<bean id="typeHandlers" class="com.wt.overflow.interceptor.WtStringTypeHandler">
	</bean>


	<!-- 进行主数据库的事务配置，采用默认策略 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>